// Code generated by protoc-gen-go-errors (errgen). DO NOT EDIT.

package example2

import (
	errors "github.com/go-kratos/kratos/v2/errors"
	errgenkratos "github.com/orzkratos/errgenkratos"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// Service unavailable
func IsServiceUnavailable(err error) bool {
	return errgenkratos.IsError(err, ApiError_SERVICE_UNAVAILABLE, 500)
}

// Service unavailable
func ErrorServiceUnavailable(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(500, ApiError_SERVICE_UNAVAILABLE, format, args...)
}

// Authentication failed
func IsAuthFailed(err error) bool {
	return errgenkratos.IsError(err, ApiError_AUTH_FAILED, 401)
}

// Authentication failed
func ErrorAuthFailed(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(401, ApiError_AUTH_FAILED, format, args...)
}

// Permission denied
func IsPermissionDenied(err error) bool {
	return errgenkratos.IsError(err, ApiError_PERMISSION_DENIED, 403)
}

// Permission denied
func ErrorPermissionDenied(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(403, ApiError_PERMISSION_DENIED, format, args...)
}

// Rate limit exceeded
func IsRateLimitExceeded(err error) bool {
	return errgenkratos.IsError(err, ApiError_RATE_LIMIT_EXCEEDED, 429)
}

// Rate limit exceeded
func ErrorRateLimitExceeded(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(429, ApiError_RATE_LIMIT_EXCEEDED, format, args...)
}
