// Code generated by protoc-gen-go-errors (errgen). DO NOT EDIT.

package example3

import (
	errors "github.com/go-kratos/kratos/v2/errors"
	errgenkratos "github.com/orzkratos/errgenkratos"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// Invalid request
func IsInvalidRequest(err error) bool {
	return errgenkratos.IsError(err, BusinessError_INVALID_REQUEST, 400)
}

// Invalid request
func ErrorInvalidRequest(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(400, BusinessError_INVALID_REQUEST, format, args...)
}

// Order not found
func IsOrderNotFound(err error) bool {
	return errgenkratos.IsError(err, BusinessError_ORDER_NOT_FOUND, 404)
}

// Order not found
func ErrorOrderNotFound(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(404, BusinessError_ORDER_NOT_FOUND, format, args...)
}

// Payment failed
func IsPaymentFailed(err error) bool {
	return errgenkratos.IsError(err, BusinessError_PAYMENT_FAILED, 402)
}

// Payment failed
func ErrorPaymentFailed(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(402, BusinessError_PAYMENT_FAILED, format, args...)
}

// Insufficient inventory
func IsInsufficientInventory(err error) bool {
	return errgenkratos.IsError(err, BusinessError_INSUFFICIENT_INVENTORY, 409)
}

// Insufficient inventory
func ErrorInsufficientInventory(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(409, BusinessError_INSUFFICIENT_INVENTORY, format, args...)
}

// Order expired
func IsOrderExpired(err error) bool {
	return errgenkratos.IsError(err, BusinessError_ORDER_EXPIRED, 410)
}

// Order expired
func ErrorOrderExpired(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(410, BusinessError_ORDER_EXPIRED, format, args...)
}
